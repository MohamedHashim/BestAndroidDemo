plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-parcelize'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'io.gitlab.arturbosch.detekt'
}

// load local properties data
def localProperties = new Properties()
localProperties.load(new FileInputStream(rootProject.file("local.properties")))

android {
    compileSdkVersion AndroidSdk.compileSdk
    defaultConfig {
        applicationId App.id
        minSdkVersion AndroidSdk.minSdk
        targetSdkVersion AndroidSdk.targetSdk
        versionCode App.versionCode
        versionName App.versionName
        testInstrumentationRunner "com.backbase.assignment.CustomTestRunner"

        // themoviedb API key
        buildConfigField "String", "API_KEY", localProperties['API_KEY']
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
            applicationIdSuffix ".debug"
            versionNameSuffix "-debug"
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
        dataBinding true
    }
}

dependencies {

    //core
    implementation Libraries.kotlinStd
    implementation Libraries.androidCore
    implementation Libraries.fragmentKTX
    implementation Libraries.appCompat
    implementation Libraries.materialDesign
    implementation Libraries.constraintLayout

    //hilt for DI
    implementation Libraries.hilt
    kapt Libraries.hiltCompiler

    //retrofit
    implementation Libraries.retrofit
    implementation Libraries.moshiConverter
    implementation Libraries.okHTTPLogger

    //persistence room
    implementation Libraries.room
    kapt Libraries.roomCompiler
    implementation Libraries.roomKTX

    //coroutines
    implementation Libraries.coroutinesAndroid

    //navigation component
    implementation Libraries.navigationFragment
    implementation Libraries.navigationUi

    //glide
    implementation Libraries.glide

    //testing
    testImplementation TestLibraries.testCore
    testImplementation TestLibraries.archCore
    testImplementation TestLibraries.junit
    testImplementation TestLibraries.androidX
    testImplementation TestLibraries.truth
    testImplementation TestLibraries.coroutines
    testImplementation TestLibraries.room
    testImplementation TestLibraries.mockk
    testImplementation TestLibraries.testRunner
    testImplementation TestLibraries.robolectric

    androidTestImplementation TestLibraries.archCore
    androidTestImplementation TestLibraries.junit
    androidTestImplementation TestLibraries.androidX
    androidTestImplementation TestLibraries.truth
    androidTestImplementation TestLibraries.coroutines
    androidTestImplementation TestLibraries.testRunner
    androidTestImplementation TestLibraries.hiltTesting
    kaptAndroidTest TestLibraries.hiltKapt
    androidTestImplementation TestLibraries.espresso
}
